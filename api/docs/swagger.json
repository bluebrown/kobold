{
    "swagger": "2.0",
    "info": {
        "contact": {},
        "license": {
            "name": "BSD-3-Clause"
        }
    },
    "paths": {
        "/channels": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "get a list of channels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Channel"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorMsg"
                        }
                    }
                }
            }
        },
        "/channels/{name}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "get a channel by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "channel name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Channel"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorMsg"
                        }
                    }
                }
            }
        },
        "/decoders": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "decoders"
                ],
                "summary": "get a list of decoders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Decoder"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorMsg"
                        }
                    }
                }
            }
        },
        "/decoders/{name}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "decoders"
                ],
                "summary": "get a decoder by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "decoder name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Decoder"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorMsg"
                        }
                    }
                }
            }
        },
        "/pipelines": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "get a list of pipelines",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PipelineListItem"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorMsg"
                        }
                    }
                }
            }
        },
        "/pipelines/{name}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "get a pipeline by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pipeline name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PipelineListItem"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorMsg"
                        }
                    }
                }
            }
        },
        "/pipelines/{name}/runs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pipelines"
                ],
                "summary": "get runs for a pipeline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pipeline name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "run status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PipelineRunListRow"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorMsg"
                        }
                    }
                }
            }
        },
        "/posthooks": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posthooks"
                ],
                "summary": "get a list of posthooks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PostHook"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorMsg"
                        }
                    }
                }
            }
        },
        "/posthooks/{name}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posthooks"
                ],
                "summary": "get a posthook by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "posthook name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PostHook"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorMsg"
                        }
                    }
                }
            }
        },
        "/runs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runs"
                ],
                "summary": "get a list of runs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "run status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Run"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorMsg"
                        }
                    }
                }
            }
        },
        "/runs/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "runs"
                ],
                "summary": "get a run by fingerprint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "run fingerprint",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Run"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorMsg"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "get a list of tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "task status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Task"
                            }
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorMsg"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "get a task by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "task id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Task"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/api.errorMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.errorMsg": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "git.PackageURI": {
            "type": "object",
            "properties": {
                "pkg": {
                    "type": "string"
                },
                "ref": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                }
            }
        },
        "model.Channel": {
            "type": "object",
            "properties": {
                "decoder_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Decoder": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "script": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.PipelineListItem": {
            "type": "object",
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dest_branch": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "post_hook_name": {
                    "type": "string"
                },
                "repo_uri": {
                    "$ref": "#/definitions/git.PackageURI"
                }
            }
        },
        "model.PipelineRunListRow": {
            "type": "object",
            "properties": {
                "dest_branch": {
                    "type": "string"
                },
                "error": {},
                "fingerprint": {
                    "type": "string"
                },
                "msgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "post_hook": {
                    "type": "string"
                },
                "repo_uri": {
                    "$ref": "#/definitions/git.PackageURI"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {},
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.PostHook": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "script": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.Run": {
            "type": "object",
            "properties": {
                "dest_branch": {
                    "type": "string"
                },
                "error": {},
                "fingerprint": {
                    "type": "string"
                },
                "msgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "post_hook": {
                    "type": "string"
                },
                "repo_uri": {
                    "$ref": "#/definitions/git.PackageURI"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {},
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.Task": {
            "type": "object",
            "properties": {
                "dest_branch": {
                    "type": "string"
                },
                "failure_reason": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "msgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "post_hook_name": {
                    "type": "string"
                },
                "repo_uri": {
                    "$ref": "#/definitions/git.PackageURI"
                },
                "status": {
                    "type": "string"
                },
                "task_group_fingerprint": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}